
//2017
1483228800000
1514764799000

//2016
1451606400000
1483228799000

//2015
1420070400000
1451606399000

a transaction is just a hey this transaction happened so give points to that user
a receipt we know lots of things about it and we are validating it as well

how do i do multi tier redemption .... where items are of different value or maybe just item types...?

how do redemption work period... how do i remove points from my account and spend them...?

if i have x amount of points... what can i get... and how do i know ...?

i get a transaction with a

case class Receipt(
    transactionId: String,
    timestamp: Long,
    receiptLineItems: List[ReceiptLineItem],
    grandTotal: Double
)

case class ReceiptLineItem(
    item: String,
    qty: Double,
    itemCost: Double,
    totalCost: Double,
    tax: Double,
    tenders: List[Tender],
    discounts: List[Discount]
)

case class Tender(
    name: String,
    accountId: String,
    amount: Double
)

case class Discount(
    name: String,
    amount: Double
)


what kind of api do i actually need to be able to support coupons ....?

how many coupons a user has
does a user have this specific coupon
give a user a coupon
remove a coupon from a user


couponId
walletId
userId


how would i do a free item coupon...





so whats in a transactions....

transactionId
lineItems
who paid for what...
grandTotal


how to do split transactions... and let everyone win...
and then void's/returns of items in split transactions

or is a transaction just a record of something that already happened...so i just need to update my points here

how do coupons come into play...




still how does a transaction event know all the info it needs inorder to actually increment and decerment the points...


an account number comes in as the transaction comes in...
how to i use a single call using that info in order to determine what points need to be assigned

... or do i have a completely seperate points service...
which listens for transactions and then based on the transaction type
apply the points to that members account...




so when im earning points i dont need to know how many i currently have to make the transaction

so when im burning points i do need to know how many i currently have to make the transaction






so when i make a transaction...
i should already know all the relevant programs
i can do the calculation right then for how much i earned and write it to the db

... i have the userId and the card at at this point
the card can find me the programId
which will find me the program

how to actually hold all the point buckets

userId, card, programId, level

//and now how do i do special people...



when i query for the program on start of a pod then only keep the programs that are possible to effect us
i.e. forget any of them that cant be active

so what are some rules

coupons
    free item
    birthday
    loyal member

promotion
    Nx points per item
    Nx points per cart
    Nx points per tier
    buy one get one
    % off item(s)
    % off cart

tiers
    white
        100 points to next tier
        re-eval 0 months
        earns 1.2x points
    green
        300 points to next tier
        re-eval 3 months
        earns 1.7x points
    blue
        500 points to next tier
        re-eval 9 months
        earns 2.3x points
    black
        1000 points to next tier
        re-eval 12 months
        earns 3x points


business rules
    happen every earn transaction
    based on
        who i am
        what im using to pay
        special promotions or rules for that day
        timed rule
        tier levels


butttt how do i actually know what the rules do...???
like for real... how would i know that is what this rule does....???!!!!



every one earns double points

business rule
    name
    when it effects
        dates
    who it effects
        List(a list of the people this should effect)
    what it effects
        List(which transaction types)
    where it effects?
        List(which programs maybe what it effects... maybe...??)

earn points
    these should always be positive
    i dont really need to know how many points i currently have right...?
    update the point values here
burn points
    these should always be negative
    i need to check if i have enough points
    this really should just be asking if i have enough points currently
    and updating those points right then and then writing it to the ledger and transactions tables

earn coupons
burn coupons

a points service...?
something that listens to the transaction events
pulls down the program rules
and then applys them as we go to each transaction coming in
and updating the point totals for only those customers






also how do i do tiers...

and multi tier redemption
and program tiers...

what do i actually need to do...

program CRUD
users CRUD
wallet CRUD
contact info CRUD
transaction CRUD

userId: walletKey: rolodexKey
cardId: cardNumber


what is a user... just a user ident ... an email ... the core of who uses the system

what is a wallet ...  a collection of payment methods which is their just corresponding information

what is rolodex ... a rolodex card is well this ones easy i feel its all the possible real world connections

transactions are just incoming indications that someone has bought something or returns or voided something

a program is the custom definition of business logic

who are special people? at what rate do they earn points
what are the payment types? at what rate do they earn points
what other special perks do they have?

users
wallet
rolodex
transactions
programs


i have a username... i need a user id

i have a user id ... do i need a name?


i need a list of usersnames by user id
and a list of user ids by user name







post transaction
get transaction history



business logics

...for every transaction this happens
...for accurals this happens
...for this type of card this accural happens







so i have a card number and a userId

how do i then get the info i need about that userId's current tier level within the card's current program...




how do i know a members current tier in a given program


current_tier_by_user
(userId, programId), currentTier


cards need to be enrolled in a program at the start and they cant be switched

what about programs of the same currency...

having many layers of programs ... means that it needs to be assoiated to a programId which is valid for all the versions of that program and not just one...





program
	programName
	programId
	programDesc
	PRIMARY KEY (programId)

program_names
	programName
	programId
	PRIMARY KEY (programName)

program_revision
	programId
	revisionId
	tiers
	startDateTime
	endDateTime
	PRIMARY KEY ((programId), revisionId)



so now.... a card can be assoaited to a master program id

but how do i know ... what a users tier level is actually at...?


user's tier level
	userId
	programId
	tierLevel
	currentPointBuckets
	lifeTimePointBuckets
	PRIMARY KEY (userId, programId)


tier changes happen only so often...

(userId:xxx, programId:aaa,tierLevel:0, currentPointBucket: List(bucketA:100, bucketB:0), lifeTimePointBucket: List(bucketA:10000, bucketB: 600))
(userId:xxx, programId:bbb,tierLevel:2, currentPointBucket: List(bucketA:100, bucketB:100))
(userId:yyy, programId:bbb,tierLevel:0, currentPointBucket: List(bucketA:50, bucketB:50))



bucket_names
	bucketName
	bucketId
	PRIMARY KEY bucketName

(bucketName:base, bucketId:aaa)
(bucketName:extra, bucketId:bbb)

bucketId
	userId
	bucketId
	uBucketId
	name
	lifeTimePoints
	currentPoints


(userId:xxx, bucketId:aaa, uBucketId:123, lifeTimePoints:100, currentPoints:0)
(userId:xxx, bucketId:bbb, uBucketId:234, lifeTimePoints:100, currentPoints:0)


so how do i get the data that i actually need...when i need it...














Builder builder = Cluster.builder()
  .addContactPoints(nodes)
  .withQueryOptions(new QueryOptions()
    .setConsistencyLevel(ConsistencyLevel.LOCAL_ONE))
  .withLoadBalancingPolicy(new TokenAwarePolicy(
    new DCAwareRoundRobinPolicy.Builder()
      .withLocalDc("DC1").build()))
  .withPoolingOptions(options);




